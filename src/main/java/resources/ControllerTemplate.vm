
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller
@RequestMapping("/$class.getName()")
public class $class.getName()Controller {

    @Autowired
    private $class.getName()Repo repo;

    @GetMapping("/find/all/$class.getName()")
    public ResponseEntity<List<$class.getName()>> getAll$class.getName()() {
        return new ResponseEntity<>(repo.findAll(), HttpStatus.OK);
    }

    #foreach($attr in $class.getAttributes())
    @GetMapping("/find/$class.getName()/by$attr.getName()/{pathVar}")
    public ResponseEntity<List<$class.getName()>> get$class.getName()By$attr.getName()(@PathVariable $attr.getType() pathVar) {
       List<$class.getName()> var = repo.findBy$attr.getName()(pathVar);
        if (var != null) {
            return new ResponseEntity<>(var, HttpStatus.OK);
        }

        return new ResponseEntity<>(new $class.getName()(), HttpStatus.NOT_FOUND);
    }
    #end

    @PostMapping("/add/$class.getName()")
    public ResponseEntity<$class.getName()> add$class.getName()($class.getName() var) {

        return new ResponseEntity<>(repo.save(var), HttpStatus.CREATED);
    }

    @PutMapping("/update/$class.getName()")
    public ResponseEntity<$class.getName()> update$class.getName()($class.getName() var) {

        return new ResponseEntity<>(repo.save(var), HttpStatus.OK);
    }

    @DeleteMapping("/delete/$class.getName()")
    public ResponseEntity<$class.getName()> delete$class.getName()ById(long id) {
        $class.getName() var = repo.findById(id);
        if (var != null) {
            repo.deleteById(id);
            return new ResponseEntity<>(var, HttpStatus.OK);
        }
        return new ResponseEntity<>(new $class.getName()(), HttpStatus.BAD_REQUEST);
    }


}